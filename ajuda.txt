#Arquivo .env
Contem todas as informações senciveis do sistema
Ex: conexão com banco de dados e outros
artisan
Usado no terminal para execução de tarefas como por ex:
#php artisan serve
execulta servidor para visualizar a aplicação
#composer.json
Contem todas as dependencias do projeto laravel

#Pastas

    app
    Armazena toda parte logica do código como as classes 

    bootstrap
    Armazena todos os arquivos de inicialização do framework
    Normalmente, não precisará modificar nenhum arquivo neste diretório
    
    config
    Arquivos de configuração do framework

    databases
    Arquivos de definição do banco de dados

    public
    Usados para todos os arquivos publicos
    como img, css, js

    resources
    Fica os arquivos visuais da aplicação
    como as views bem como seus ativos brutos e não compilados, como CSS ou JavaScript.

    routes
    Arquivos de rotas
    Por padrão, vários arquivos de rota estão incluídos no Laravel: web.php, api.php, console.phpe channels.php.
    
    storage
    O storagediretório contém seus logs, modelos Blade compilados, sessões baseadas em arquivos, caches de arquivos

    vendor
    Armazena tudo que e gerenciado pelo composer, todas as dependencias baixadas e gerenciadas pelo composer

    
    #comandos artisan
    IMPORTANTE
    Os migrates são execultados em uma ordem, de acordo com a data e hora de criação no mesmo, então se temos uma tabela com relacionamento
    temos que se atentar que a tabela master seja criada ´primeiro
        >> php artisan migration
        execulta todas a migrates prontas criando a estrutura de tabelas no banco de dados

        >> php artisan migration:rollback
        desfaz o migration

        >> php artisan migration:status
        Verifica o status do ultimo migrates

        >> php artisan migrate:fresh
        Apaga e recria todas as tabelas das migrates

        >> php artisan make:migration create_produtos_table
        cria o migration para tabela de produtos, com a estrutura pronta para receber os campos
        
        >> php artisan make:migration produtos --create=produtos >> Segunda forma de criar migrates
        cria o migration para tabela de produtos, com a estrutura pronta para receber os campos

    #Controllers
    Resposanvel por toda lógica e regras de negócio
    >> php artisan make:controler ProdutoController --resource
    Com o comando acima criaremos um controle com todos os metodos necessarios

    >> php artisan make:controler -mcr
    Cria o Controller o model e o migrate em uma unica linha de codigo

    #modelos
    Representação de entidades de um banco de dados
    EX: Produto, Cliente, Categoria

    >> php artisan make:model Produto
    Criar um model

    #seeder
    recurso do laravel para popular tabela no banco de dados

    php artisan make:seeder UserSeeder
    Cria o seeder




   

    



